# Generated by Django 4.1.3 on 2022-11-29 11:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('iin_number', models.CharField(max_length=12, verbose_name='IIN')),
                ('id_number', models.BigAutoField(primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=50, verbose_name='First Name')),
                ('mname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('lname', models.CharField(max_length=50, verbose_name='Last Name')),
                ('blood_group', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('O', 'O'), ('AB', 'AB')], max_length=5, verbose_name='Blood group')),
                ('emergency_contact_number', models.CharField(max_length=12, verbose_name='Emergency contact number')),
                ('contact_number', models.CharField(max_length=12, verbose_name='Contact Number')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('address', models.CharField(max_length=1024, verbose_name='Physical address')),
                ('martial_status', models.CharField(choices=[('Married', 'Married'), ('Not Married', 'Not Married')], max_length=20, verbose_name='Martial status')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('specialization', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Specialization',
                'verbose_name_plural': 'Specializations',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('date_of_birth', models.DateField(help_text='YYYY-MM-DD', verbose_name='Date of birth')),
                ('iin_number', models.CharField(max_length=12, verbose_name='IIN')),
                ('id_number', models.BigAutoField(primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=50, verbose_name='First Name')),
                ('mname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('lname', models.CharField(max_length=50, verbose_name='Last Name')),
                ('contact_number', models.CharField(max_length=12, verbose_name='Contact Number')),
                ('experience', models.CharField(max_length=4, verbose_name='Experience In Years')),
                ('photo', models.ImageField(blank=True, default='images/download.png', null=True, upload_to='images/')),
                ('category', models.CharField(max_length=100, verbose_name='Category')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('schedule_details', models.CharField(max_length=100, verbose_name='Schedule Details')),
                ('education', models.CharField(choices=[('No Education', 'No Education'), ('High School Diploma', 'High School Diploma'), ('Certificate or associate degree', 'Certificate or associate degree'), ("Bachelor's Degree", "Bachelor's Degree"), ("Master's Degree", "Master's Degree"), ('Doctorate', 'Doctorate')], max_length=50, verbose_name='Degree of Education')),
                ('rating', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=3, verbose_name='Rating')),
                ('address', models.CharField(max_length=1024, verbose_name='Address')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.department')),
                ('specialization_details_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.specialization')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='YYYY-MM-DD')),
                ('timeslot', models.IntegerField(choices=[(0, '09:00 – 09:30'), (1, '10:00 – 10:30'), (2, '11:00 – 11:30'), (3, '12:00 – 12:30'), (4, '13:00 – 13:30'), (5, '14:00 – 14:30'), (6, '15:00 – 15:30'), (7, '16:00 – 16:30'), (8, '17:00 – 17:30')])),
                ('patient_name', models.CharField(max_length=60)),
                ('specialization', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=200)),
                ('phone', models.CharField(max_length=12)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.doctor')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'unique_together': {('doctor', 'date', 'timeslot')},
            },
        ),
    ]
